{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","baseURL","get_id","useRef","get_title","post_title","post_description","put_id","put_title","put_description","put_published","delete_id","useState","getResult","setGetResult","postResult","setPostResult","putResult","setPutResult","deleteResult","setDeleteResult","fortmatResponse","res","JSON","stringify","a","fetch","ok","message","status","statusText","Error","json","data","result","headers","get","length","id","current","value","title","url","URL","params","search","URLSearchParams","postData","description","method","body","putData","published","checked","className","onClick","type","ref","placeholder","role","htmlFor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b28dc21f.chunk.js","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const baseURL = \"https://api.microlink.io?url=\";\n\n  const get_id = useRef(null);\n  const get_title = useRef(null);\n\n  const post_title = useRef(null);\n  const post_description = useRef(null);\n\n  const put_id = useRef(null);\n  const put_title = useRef(null);\n  const put_description = useRef(null);\n  const put_published = useRef(null);\n\n  const delete_id = useRef(null);\n\n  const [getResult, setGetResult] = useState(null);\n  const [postResult, setPostResult] = useState(null);\n  const [putResult, setPutResult] = useState(null);\n  const [deleteResult, setDeleteResult] = useState(null);\n\n  const fortmatResponse = (res) => {\n    return JSON.stringify(res, null, 2);\n  };\n\n  async function getAllData() {\n    try {\n      const res = await fetch(`${baseURL}/tutorials`);\n\n      if (!res.ok) {\n        const message = `An error has occured: ${res.status} - ${res.statusText}`;\n        throw new Error(message);\n      }\n\n      const data = await res.json();\n\n      const result = {\n        status: res.status + \"-\" + res.statusText,\n        headers: {\n          \"Content-Type\": res.headers.get(\"Content-Type\"),\n          \"Content-Length\": res.headers.get(\"Content-Length\")\n        },\n        length: res.headers.get(\"Content-Length\"),\n        data: data\n      };\n\n      setGetResult(fortmatResponse(result));\n    } catch (err) {\n      setGetResult(err.message);\n    }\n  }\n\n  async function getDataById() {\n    const id = get_id.current.value;\n\n    if (id) {\n      try {\n        const res = await fetch(`${baseURL}${id}`);\n\n        if (!res.ok) {\n          const message = `An error has occured: ${res.status} - ${res.statusText}`;\n          throw new Error(message);\n        }\n\n        const data = await res.json();\n\n        const result = {\n          data: data,\n          status: res.status,\n          statusText: res.statusText,\n          headers: {\n            \"Content-Type\": res.headers.get(\"Content-Type\"),\n            \"Content-Length\": res.headers.get(\"Content-Length\")\n          }\n        };\n\n        setGetResult(fortmatResponse(result));\n      } catch (err) {\n        setGetResult(err.message);\n      }\n    }\n  }\n\n  async function getDataByTitle() {\n    const title = get_title.current.value;\n\n    if (title) {\n      try {\n        // const res = await fetch(`${baseURL}/tutorials?title=${title}`);\n\n        let url = new URL(`${baseURL}/tutorials`);\n        const params = { title: title };\n        url.search = new URLSearchParams(params);\n\n        const res = await fetch(url);\n\n        if (!res.ok) {\n          const message = `An error has occured: ${res.status} - ${res.statusText}`;\n          throw new Error(message);\n        }\n\n        const data = await res.json();\n\n        const result = {\n          status: res.status + \"-\" + res.statusText,\n          headers: {\n            \"Content-Type\": res.headers.get(\"Content-Type\"),\n            \"Content-Length\": res.headers.get(\"Content-Length\")\n          },\n          data: data\n        };\n\n        setGetResult(fortmatResponse(result));\n      } catch (err) {\n        setGetResult(err.message);\n      }\n    }\n  }\n\n  async function postData() {\n    const postData = {\n      title: post_title.current.value,\n      description: post_description.current.value\n    };\n\n    try {\n      const res = await fetch(`${baseURL}/tutorials`, {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": \"token-value\"\n        },\n        body: JSON.stringify(postData)\n      });\n\n      if (!res.ok) {\n        const message = `An error has occured: ${res.status} - ${res.statusText}`;\n        throw new Error(message);\n      }\n\n      const data = await res.json();\n\n      const result = {\n        status: res.status + \"-\" + res.statusText,\n        headers: {\n          \"Content-Type\": res.headers.get(\"Content-Type\"),\n          \"Content-Length\": res.headers.get(\"Content-Length\")\n        },\n        data: data\n      };\n\n      setPostResult(fortmatResponse(result));\n    } catch (err) {\n      setPostResult(err.message);\n    }\n  }\n\n  async function putData() {\n    const id = put_id.current.value;\n\n    if (id) {\n      const putData = {\n        title: put_title.current.value,\n        description: put_description.current.value,\n        published: put_published.current.checked\n      };\n\n      try {\n        const res = await fetch(`${baseURL}/tutorials/${id}`, {\n          method: \"put\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-access-token\": \"token-value\"\n          },\n          body: JSON.stringify(putData)\n        });\n\n        if (!res.ok) {\n          const message = `An error has occured: ${res.status} - ${res.statusText}`;\n          throw new Error(message);\n        }\n\n        const data = await res.json();\n\n        const result = {\n          status: res.status + \"-\" + res.statusText,\n          headers: { \"Content-Type\": res.headers.get(\"Content-Type\") },\n          data: data\n        };\n\n        setPutResult(fortmatResponse(result));\n      } catch (err) {\n        setPutResult(err.message);\n      }\n    }\n  }\n\n  async function deleteAllData() {\n    try {\n      const res = await fetch(`${baseURL}/tutorials`, { method: \"delete\" });\n\n      const data = await res.json();\n\n      const result = {\n        status: res.status + \"-\" + res.statusText,\n        headers: { \"Content-Type\": res.headers.get(\"Content-Type\") },\n        data: data\n      };\n\n      setDeleteResult(fortmatResponse(result));\n    } catch (err) {\n      setDeleteResult(err.message);\n    }\n  }\n\n  async function deleteDataById() {\n    const id = delete_id.current.value;\n\n    if (id) {\n      try {\n        const res = await fetch(`${baseURL}/tutorials/${id}`, {\n          method: \"delete\"\n        });\n\n        const data = await res.json();\n\n        const result = {\n          status: res.status + \"-\" + res.statusText,\n          headers: { \"Content-Type\": res.headers.get(\"Content-Type\") },\n          data: data\n        };\n\n        setDeleteResult(fortmatResponse(result));\n      } catch (err) {\n        setDeleteResult(err.message);\n      }\n    }\n  }\n\n  const clearGetOutput = () => {\n    setGetResult(null);\n  };\n\n  const clearPostOutput = () => {\n    setPostResult(null);\n  };\n\n  const clearPutOutput = () => {\n    setPutResult(null);\n  };\n\n  const clearDeleteOutput = () => {\n    setDeleteResult(null);\n  };\n\n  return (\n    <div id=\"app\" className=\"container my-3\">\n      <h3>Web Article Meta Data Scraper </h3>\n\n      <div className=\"card mt-3\">\n        <div className=\"card-header\">React Fetch GET - Webdata</div>\n        <div className=\"card-body\">\n          <div className=\"input-group input-group-sm\">\n            <button className=\"btn btn-sm btn-primary\" onClick={getAllData}>\n              Get All\n            </button>\n\n            <input\n              type=\"text\"\n              ref={get_id}\n              className=\"form-control ml-2\"\n              placeholder=\"URL\"\n            />\n            <div className=\"input-group-append\">\n              <button className=\"btn btn-sm btn-primary\" onClick={getDataById}>\n                Search\n              </button>\n            </div>\n\n            <input\n              type=\"text\"\n              ref={get_title}\n              className=\"form-control ml-2\"\n              placeholder=\"Source\"\n            />\n            <div className=\"input-group-append\">\n              <button\n                className=\"btn btn-sm btn-primary\"\n                onClick={getDataByTitle}\n              >\n                Find By Source\n              </button>\n            </div>\n\n            <button\n              className=\"btn btn-sm btn-warning ml-2\"\n              onClick={clearGetOutput}\n            >\n              Clear\n            </button>\n          </div>\n\n          {getResult && (\n            <div className=\"alert alert-secondary mt-2\" role=\"alert\">\n              <pre>{getResult}</pre>\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"card mt-3\">\n        <div className=\"card-header\">React Fetch POST - Database </div>\n        <div className=\"card-body\">\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              ref={post_title}\n              placeholder=\"Title\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              ref={post_description}\n              placeholder=\"Description\"\n            />\n          </div>\n          <button className=\"btn btn-sm btn-primary\" onClick={postData}>\n            Post Data\n          </button>\n          <button\n            className=\"btn btn-sm btn-warning ml-2\"\n            onClick={clearPostOutput}\n          >\n            Clear\n          </button>\n\n          {postResult && (\n            <div className=\"alert alert-secondary mt-2\" role=\"alert\">\n              <pre>{postResult}</pre>\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"card mt-3\">\n        <div className=\"card-header\">React Fetch PUT - Database </div>\n        <div className=\"card-body\">\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              ref={put_id}\n              placeholder=\"Id\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              ref={put_title}\n              placeholder=\"Title\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              ref={put_description}\n              placeholder=\"Description\"\n            />\n          </div>\n          <div className=\"form-check mb-2\">\n            <input\n              type=\"checkbox\"\n              className=\"form-check-input\"\n              ref={put_published}\n            />\n            <label className=\"form-check-label\" htmlFor=\"put_published\">\n              Publish\n            </label>\n          </div>\n          <button className=\"btn btn-sm btn-primary\" onClick={putData}>\n            Update Data\n          </button>\n          <button\n            className=\"btn btn-sm btn-warning ml-2\"\n            onClick={clearPutOutput}\n          >\n            Clear\n          </button>\n\n          {putResult && (\n            <div className=\"alert alert-secondary mt-2\" role=\"alert\">\n              <pre>{putResult}</pre>\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"card mt-3\">\n        <div className=\"card-header\">React Fetch DELETE - Database</div>\n        <div className=\"card-body\">\n          <div className=\"input-group input-group-sm\">\n            <button className=\"btn btn-sm btn-danger\" onClick={deleteAllData}>\n              Delete All\n            </button>\n\n            <input\n              type=\"text\"\n              ref={delete_id}\n              className=\"form-control ml-2\"\n              placeholder=\"Id\"\n            />\n            <div className=\"input-group-append\">\n              <button\n                className=\"btn btn-sm btn-danger\"\n                onClick={deleteDataById}\n              >\n                Delete by Id\n              </button>\n            </div>\n\n            <button\n              className=\"btn btn-sm btn-warning ml-2\"\n              onClick={clearDeleteOutput}\n            >\n              Clear\n            </button>\n          </div>\n\n          {deleteResult && (\n            <div className=\"alert alert-secondary mt-2\" role=\"alert\">\n              <pre>{deleteResult}</pre>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}